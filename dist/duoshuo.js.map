{"version":3,"sources":["../libs/duoshuo.js"],"names":[],"mappings":"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","file":"duoshuo.js","sourcesContent":["import SDK from 'sdk'\nimport Promise from 'bluebird'\nimport apis from './apis'\nimport rules from './rules'\n\nexport default class Duoshuo {\n  constructor(config) {\n    if (!config.short_name) \n      return\n\n    this.config = config\n    this.host = 'api.duoshuo.com'\n    this.sdk = new SDK(`https://${ this.host }`, apis, rules(config))\n  }\n\n  /**\n   *\n   * Duoshuo#auth\n   * 使用code换取access_token与用户ID\n   *\n   **/\n  auth(code) {\n    return new Promise((res, rej) => {\n      if (!code)\n        return rej(new Error('Code is required'))\n\n      const query = {\n        form: {\n          code,\n          client_id: this.config.short_name\n        }\n      }\n\n      this.sdk.token(query, (err, ret) => {\n        if (err)\n          return rej(err)\n\n        return res(ret)\n      })\n    })\n  }\n\n  /**\n   *\n   * Duoshuo#signin()\n   * Signin middleware: express/connect等框架可直接使用此middleware\n   *\n   **/\n  signin() {\n    return (req, res, next) => {\n      this\n        .auth(req.query.code)\n        .then(result => {\n          res.locals.duoshuo = result\n          return next()\n        })\n        .catch(next)\n    }\n  }\n\n  /**\n   *\n   * Duoshuo#getClient\n   * 获取一个 duoshuoClient 实例\n   *\n   **/\n  getClient(access_token) {\n    if (!access_token) \n      return\n\n    return new duoshuoClient(this.sdk, access_token)\n  }\n}\n\n/**\n *\n * duoshuoClient\n * 构造一个 duoshuoClient 实例,\n * duoshuoClient 用于在拥有 `access_token` 的情况下访问多说接口\n **/\nclass duoshuoClient {\n  constructor(sdk, access_token) {\n    this.access_token = access_token\n    this.init(sdk)\n  }\n\n  init(sdk) {\n    // init build-in method\n    ['get','post','put','delete'].forEach((buildInMethod) => {\n      this[buildInMethod] = (url, params, callback) => {\n        let data = params\n\n        if (buildInMethod === 'post') {\n          if (!data.form) \n            data.form = {}\n\n          data.form.access_token = this.access_token\n        }\n\n        if (buildInMethod === 'get') {\n          if (!data.qs) \n            data.qs = {}\n\n          data.qs.access_token = this.access_token\n        }\n\n        return sdk[buildInMethod](url, data, callback)\n      }\n    })\n\n    // init custom api and inject `access_token`\n    Object.keys(apis).forEach(key => {\n      if (key === 'token') \n        return\n\n      this[key] = (params, callback) => {\n        let method = apis[key].method\n        let data = {}\n\n        if (method === 'post') {\n          data.form = params.form || params\n          data.form.access_token = this.access_token\n        }\n\n        if (method === 'get') {\n          data.qs = params.qs || params\n          data.qs.access_token = this.access_token\n        }\n\n        return sdk[key](data, callback)\n      }\n    })\n  }\n}\n"]}